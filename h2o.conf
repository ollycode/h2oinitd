listen: 80 # accept HTTP on port 80 on default address (both IPv4 and IPv6)

hosts:
  "127.0.0.1": # accept HTTP on 127.0.0.1
    paths:
      "/":
        file.dir: /srv/h2o
        file.send-gzip: ON

access-log: /var/log/h2o.access.log
error-log: /var/log/h2o.error.log
pid-file: /var/run/h2o.pid
http2-reprioritize-blocking-assets: ON   # performance tuning option

########################## some example configurations #########################
################################################################################
########################## Configuration with 2 paths ##########################
# hosts:
#   "www.example.com":
#     listen:
#       port: 80
#     paths:
#       "/":
#         file.dir: /path/to/doc-root
#       "/assets":
#         file.dir: /path/to/assets

################################################################################
######### Example using host-level listeners for HTTPS virtual hosting #########
# hosts:
#   "www.example.com:443":
#     listen:
#       port: 443
#       ssl:
#         key-file: /path/to/www_example_com.key
#         certificate-file: /path/to/www_example_com.crt
#     paths:
#       "/":
#         file.dir: /path/to/doc-root_of_www_example_com
#   "www.example.jp:443":
#     listen:
#       port: 443
#       ssl:
#         key-file: /path/to/www_example_jp.key
#         certificate-file: /path/to/www_example_jp.crt
#     paths:
#       "/":
#         file.dir: /path/to/doc-root_of_www_example_jp
